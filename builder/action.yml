name: Our builder
on:
  workflow_call:
runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: AdamKorcz/java-slsa-generator
        path: java-slsa-generator
    #- name: 'test'
    #  shell: bash
    #  env:
    #    GHA_PATH: ${{ github.action_path }}
    #    ALL_INPUTS: ${{ toJson(inputs.slsa-workflow-inputs) }}
    #    INPUT_NAME1: ${{ fromJson(inputs.slsa-workflow-inputs).name1 }}
    #    INPUT_NAME2: ${{ fromJson(inputs.slsa-workflow-inputs).name2 }}
    #    SECRET1: ${{ inputs.slsa-workflow-secret1 }}
    #    SECRET2: ${{ inputs.slsa-workflow-secret2 }}
    #  run: |
    #    echo "GITHUB_ACTION_PATH: $GITHUB_ACTION_PATH"
    #    echo "GHA_PATH: $GHA_PATH"
    #    echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
    #    ls "$GITHUB_WORKSPACE"
    #    ls
    #    pwd
    #    tree
    #    echo "git status:"
    #    git status --short
    #    echo "inputs: $ALL_INPUTS"
    #    echo "inputs.name1: $INPUT_NAME1"
    #    echo "inputs.name2: $INPUT_NAME2"
    #    echo "SECRET1: $(echo $SECRET1 | base64 | base64)"
    #    echo "SECRET2: $(echo $SECRET2 | base64 | base64)"
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # This would call the main Action, e.g., ./../__TOOL_CHECKOUT_DIR__/<path/to/action>
    # if path is left empty, the Action's action.yml is located at the root of the repository.
    - name: Run mvn package
      shell: bash
      run: mvn package # && ls -la target
    - name: Upload built artifacts from mvn package
      uses: actions/upload-artifact@v3
      with:
        path: target/*.jar
    - name: Make outputs
      id: make-outputs
      env:
        SLSA_OUTPUTS_ARTIFACTS_FILE: ${{ inputs.slsa-layout-file }}
      shell: bash
      run: |
        ls
        find target -type f -name "*jar"
        hash=$(sha256sum ./target/gs-maven-0.1.0.jar | awk '{print $1}')
        echo 
        echo "SLSA_OUTPUTS_ARTIFACTS_FILE: $SLSA_OUTPUTS_ARTIFACTS_FILE"
        cat <<EOF >DATA
        #!/bin/bash

        echo -e -n "{\n  \"version\": 1,\n  \"attestations\": ["
        #echo -e -n $STR

        NUM_JAR_FILES=$(find target -type f -name "*jar" | wc -l)
        #echo $NUM_JAR_FILES
        COUNTER=1
        find ./target -type f -name "*.jar"|while read fname; do
          file="$(basename -- $fname)"
          #echo $COUNTER
          hash=$(sha256sum $fname | awk '{print $1}')
          #echo "$fname"
          echo $file
          echo -e -n "\n    {\n      \"name\": \"attestation1.intoto\","
          echo -e -n "\n      \"subjects\": ["
          echo -e -n "\n        { \"name\": \"${file}\","
          echo -e -n "\n        \"digest\": { \"sha256\": \"${hash}\" }"
          echo -e -n "\n        }\n      ]\n    }"

          if [[ "$COUNTER" != "$NUM_JAR_FILES" ]]; then
            echo -n ","
          fi


          COUNTER=$[$COUNTER +1]
        done

        echo -e "\n  ]"
        echo "}"
        echo -e "\n"
        EOF
        #TODO: output in file and base64 -w0
        # NOTE: we relay the output from the inner Action.
        echo "some-output=tool-defined-some-output" >> "$GITHUB_OUTPUT"
        echo "other-output=tool-defined-other-output" >> "$GITHUB_OUTPUT"
        # Expected file with pre-defined output
        cat DATA > run.sh
        chmod +x run.sh
        ./run.sh > "$SLSA_OUTPUTS_ARTIFACTS_FILE"
      #cat DATA > "$SLSA_OUTPUTS_ARTIFACTS_FILE"

    # Here we would possibly run jreleaser
    
    #- name: Download Artifact
    #  id: download-artifact
    #  uses: actions/download-artifact@v1
    #  with:
    #    name: test-project-0.1.0.jar
    #- name: Display structure of downloaded files
    #  shell: bash
    #  run: ls -R

#    - name: "run"
#      id: generate-outputs
#      env:
#        SLSA_OUTPUTS_ARTIFACTS_FILE: ${{ inputs.slsa-layout-file }}
#      shell: bash
#      run: |
#        hash=$(sha256sum ./target/gs-maven-0.1.0.jar | awk '{print $1}')
#        echo 
#        echo "SLSA_OUTPUTS_ARTIFACTS_FILE: $SLSA_OUTPUTS_ARTIFACTS_FILE"
#        cat <<EOF >DATA
#        {
#          "version": 1,
#          "attestations": [
#            {
#              "name": "attestation1.intoto",
#              "subjects": [
#                { "name": "test-project-0.1.0.jar",
#                  "digest": { "sha256": "${hash}" }
#                }
#                ]
#            }
#          ]
#        }
#        EOF
#        #TODO: output in file and base64 -w0
#        # NOTE: we relay the output from the inner Action.
#        echo "some-output=tool-defined-some-output" >> "$GITHUB_OUTPUT"
#        echo "other-output=tool-defined-other-output" >> "$GITHUB_OUTPUT"
#        # Expected file with pre-defined output
#        cat DATA > "$SLSA_OUTPUTS_ARTIFACTS_FILE"
